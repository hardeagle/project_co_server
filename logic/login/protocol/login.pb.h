// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_INCLUDED_login_2eproto
#define PROTOBUF_INCLUDED_login_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_login_2eproto 

namespace protobuf_login_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_login_2eproto
namespace LoginProtocol {
class C2S_LoginLoad;
class C2S_LoginLoadDefaultTypeInternal;
extern C2S_LoginLoadDefaultTypeInternal _C2S_LoginLoad_default_instance_;
class S2C_LoginLoad;
class S2C_LoginLoadDefaultTypeInternal;
extern S2C_LoginLoadDefaultTypeInternal _S2C_LoginLoad_default_instance_;
}  // namespace LoginProtocol
namespace google {
namespace protobuf {
template<> ::LoginProtocol::C2S_LoginLoad* Arena::CreateMaybeMessage<::LoginProtocol::C2S_LoginLoad>(Arena*);
template<> ::LoginProtocol::S2C_LoginLoad* Arena::CreateMaybeMessage<::LoginProtocol::S2C_LoginLoad>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace LoginProtocol {

// ===================================================================

class C2S_LoginLoad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginProtocol.C2S_LoginLoad) */ {
 public:
  C2S_LoginLoad();
  virtual ~C2S_LoginLoad();

  C2S_LoginLoad(const C2S_LoginLoad& from);

  inline C2S_LoginLoad& operator=(const C2S_LoginLoad& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C2S_LoginLoad(C2S_LoginLoad&& from) noexcept
    : C2S_LoginLoad() {
    *this = ::std::move(from);
  }

  inline C2S_LoginLoad& operator=(C2S_LoginLoad&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_LoginLoad& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C2S_LoginLoad* internal_default_instance() {
    return reinterpret_cast<const C2S_LoginLoad*>(
               &_C2S_LoginLoad_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(C2S_LoginLoad* other);
  friend void swap(C2S_LoginLoad& a, C2S_LoginLoad& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C2S_LoginLoad* New() const final {
    return CreateMaybeMessage<C2S_LoginLoad>(NULL);
  }

  C2S_LoginLoad* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<C2S_LoginLoad>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const C2S_LoginLoad& from);
  void MergeFrom(const C2S_LoginLoad& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2S_LoginLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes loginname = 1;
  void clear_loginname();
  static const int kLoginnameFieldNumber = 1;
  const ::std::string& loginname() const;
  void set_loginname(const ::std::string& value);
  #if LANG_CXX11
  void set_loginname(::std::string&& value);
  #endif
  void set_loginname(const char* value);
  void set_loginname(const void* value, size_t size);
  ::std::string* mutable_loginname();
  ::std::string* release_loginname();
  void set_allocated_loginname(::std::string* loginname);

  // @@protoc_insertion_point(class_scope:LoginProtocol.C2S_LoginLoad)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr loginname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_LoginLoad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginProtocol.S2C_LoginLoad) */ {
 public:
  S2C_LoginLoad();
  virtual ~S2C_LoginLoad();

  S2C_LoginLoad(const S2C_LoginLoad& from);

  inline S2C_LoginLoad& operator=(const S2C_LoginLoad& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2C_LoginLoad(S2C_LoginLoad&& from) noexcept
    : S2C_LoginLoad() {
    *this = ::std::move(from);
  }

  inline S2C_LoginLoad& operator=(S2C_LoginLoad&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_LoginLoad& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2C_LoginLoad* internal_default_instance() {
    return reinterpret_cast<const S2C_LoginLoad*>(
               &_S2C_LoginLoad_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(S2C_LoginLoad* other);
  friend void swap(S2C_LoginLoad& a, S2C_LoginLoad& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2C_LoginLoad* New() const final {
    return CreateMaybeMessage<S2C_LoginLoad>(NULL);
  }

  S2C_LoginLoad* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2C_LoginLoad>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2C_LoginLoad& from);
  void MergeFrom(const S2C_LoginLoad& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2C_LoginLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // int32 role_id = 2;
  void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  ::google::protobuf::int32 role_id() const;
  void set_role_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginProtocol.S2C_LoginLoad)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 role_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_login_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C2S_LoginLoad

// bytes loginname = 1;
inline void C2S_LoginLoad::clear_loginname() {
  loginname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& C2S_LoginLoad::loginname() const {
  // @@protoc_insertion_point(field_get:LoginProtocol.C2S_LoginLoad.loginname)
  return loginname_.GetNoArena();
}
inline void C2S_LoginLoad::set_loginname(const ::std::string& value) {
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginProtocol.C2S_LoginLoad.loginname)
}
#if LANG_CXX11
inline void C2S_LoginLoad::set_loginname(::std::string&& value) {
  
  loginname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginProtocol.C2S_LoginLoad.loginname)
}
#endif
inline void C2S_LoginLoad::set_loginname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginProtocol.C2S_LoginLoad.loginname)
}
inline void C2S_LoginLoad::set_loginname(const void* value, size_t size) {
  
  loginname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginProtocol.C2S_LoginLoad.loginname)
}
inline ::std::string* C2S_LoginLoad::mutable_loginname() {
  
  // @@protoc_insertion_point(field_mutable:LoginProtocol.C2S_LoginLoad.loginname)
  return loginname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2S_LoginLoad::release_loginname() {
  // @@protoc_insertion_point(field_release:LoginProtocol.C2S_LoginLoad.loginname)
  
  return loginname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2S_LoginLoad::set_allocated_loginname(::std::string* loginname) {
  if (loginname != NULL) {
    
  } else {
    
  }
  loginname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginname);
  // @@protoc_insertion_point(field_set_allocated:LoginProtocol.C2S_LoginLoad.loginname)
}

// -------------------------------------------------------------------

// S2C_LoginLoad

// int32 ret = 1;
inline void S2C_LoginLoad::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 S2C_LoginLoad::ret() const {
  // @@protoc_insertion_point(field_get:LoginProtocol.S2C_LoginLoad.ret)
  return ret_;
}
inline void S2C_LoginLoad::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:LoginProtocol.S2C_LoginLoad.ret)
}

// int32 role_id = 2;
inline void S2C_LoginLoad::clear_role_id() {
  role_id_ = 0;
}
inline ::google::protobuf::int32 S2C_LoginLoad::role_id() const {
  // @@protoc_insertion_point(field_get:LoginProtocol.S2C_LoginLoad.role_id)
  return role_id_;
}
inline void S2C_LoginLoad::set_role_id(::google::protobuf::int32 value) {
  
  role_id_ = value;
  // @@protoc_insertion_point(field_set:LoginProtocol.S2C_LoginLoad.role_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace LoginProtocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_login_2eproto
