// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace LoginProtocol {
class C2S_LoginLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C2S_LoginLoad>
      _instance;
} _C2S_LoginLoad_default_instance_;
class S2C_LoginLoadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2C_LoginLoad>
      _instance;
} _S2C_LoginLoad_default_instance_;
}  // namespace LoginProtocol
namespace protobuf_login_2eproto {
static void InitDefaultsC2S_LoginLoad() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LoginProtocol::_C2S_LoginLoad_default_instance_;
    new (ptr) ::LoginProtocol::C2S_LoginLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginProtocol::C2S_LoginLoad::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_C2S_LoginLoad =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsC2S_LoginLoad}, {}};

static void InitDefaultsS2C_LoginLoad() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LoginProtocol::_S2C_LoginLoad_default_instance_;
    new (ptr) ::LoginProtocol::S2C_LoginLoad();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LoginProtocol::S2C_LoginLoad::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_S2C_LoginLoad =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2C_LoginLoad}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_C2S_LoginLoad.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2C_LoginLoad.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginProtocol::C2S_LoginLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginProtocol::C2S_LoginLoad, loginname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginProtocol::S2C_LoginLoad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginProtocol::S2C_LoginLoad, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LoginProtocol::S2C_LoginLoad, role_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LoginProtocol::C2S_LoginLoad)},
  { 6, -1, sizeof(::LoginProtocol::S2C_LoginLoad)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LoginProtocol::_C2S_LoginLoad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LoginProtocol::_S2C_LoginLoad_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "login.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013login.proto\022\rLoginProtocol\"\"\n\rC2S_Logi"
      "nLoad\022\021\n\tloginname\030\001 \001(\014\"-\n\rS2C_LoginLoa"
      "d\022\013\n\003ret\030\001 \001(\005\022\017\n\007role_id\030\002 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 119);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_login_2eproto
namespace LoginProtocol {

// ===================================================================

void C2S_LoginLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S_LoginLoad::kLoginnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S_LoginLoad::C2S_LoginLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_C2S_LoginLoad.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginProtocol.C2S_LoginLoad)
}
C2S_LoginLoad::C2S_LoginLoad(const C2S_LoginLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loginname().size() > 0) {
    loginname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginname_);
  }
  // @@protoc_insertion_point(copy_constructor:LoginProtocol.C2S_LoginLoad)
}

void C2S_LoginLoad::SharedCtor() {
  loginname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

C2S_LoginLoad::~C2S_LoginLoad() {
  // @@protoc_insertion_point(destructor:LoginProtocol.C2S_LoginLoad)
  SharedDtor();
}

void C2S_LoginLoad::SharedDtor() {
  loginname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void C2S_LoginLoad::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* C2S_LoginLoad::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S_LoginLoad& C2S_LoginLoad::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_C2S_LoginLoad.base);
  return *internal_default_instance();
}


void C2S_LoginLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginProtocol.C2S_LoginLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loginname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool C2S_LoginLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginProtocol.C2S_LoginLoad)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes loginname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_loginname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginProtocol.C2S_LoginLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginProtocol.C2S_LoginLoad)
  return false;
#undef DO_
}

void C2S_LoginLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginProtocol.C2S_LoginLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes loginname = 1;
  if (this->loginname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->loginname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginProtocol.C2S_LoginLoad)
}

::google::protobuf::uint8* C2S_LoginLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginProtocol.C2S_LoginLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes loginname = 1;
  if (this->loginname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->loginname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginProtocol.C2S_LoginLoad)
  return target;
}

size_t C2S_LoginLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginProtocol.C2S_LoginLoad)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes loginname = 1;
  if (this->loginname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->loginname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2S_LoginLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginProtocol.C2S_LoginLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S_LoginLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S_LoginLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginProtocol.C2S_LoginLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginProtocol.C2S_LoginLoad)
    MergeFrom(*source);
  }
}

void C2S_LoginLoad::MergeFrom(const C2S_LoginLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginProtocol.C2S_LoginLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loginname().size() > 0) {

    loginname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginname_);
  }
}

void C2S_LoginLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginProtocol.C2S_LoginLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S_LoginLoad::CopyFrom(const C2S_LoginLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginProtocol.C2S_LoginLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S_LoginLoad::IsInitialized() const {
  return true;
}

void C2S_LoginLoad::Swap(C2S_LoginLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S_LoginLoad::InternalSwap(C2S_LoginLoad* other) {
  using std::swap;
  loginname_.Swap(&other->loginname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata C2S_LoginLoad::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2C_LoginLoad::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C_LoginLoad::kRetFieldNumber;
const int S2C_LoginLoad::kRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C_LoginLoad::S2C_LoginLoad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_login_2eproto::scc_info_S2C_LoginLoad.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LoginProtocol.S2C_LoginLoad)
}
S2C_LoginLoad::S2C_LoginLoad(const S2C_LoginLoad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_id_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(role_id_));
  // @@protoc_insertion_point(copy_constructor:LoginProtocol.S2C_LoginLoad)
}

void S2C_LoginLoad::SharedCtor() {
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_id_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(role_id_));
}

S2C_LoginLoad::~S2C_LoginLoad() {
  // @@protoc_insertion_point(destructor:LoginProtocol.S2C_LoginLoad)
  SharedDtor();
}

void S2C_LoginLoad::SharedDtor() {
}

void S2C_LoginLoad::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2C_LoginLoad::descriptor() {
  ::protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C_LoginLoad& S2C_LoginLoad::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_login_2eproto::scc_info_S2C_LoginLoad.base);
  return *internal_default_instance();
}


void S2C_LoginLoad::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginProtocol.S2C_LoginLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_id_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(role_id_));
  _internal_metadata_.Clear();
}

bool S2C_LoginLoad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LoginProtocol.S2C_LoginLoad)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 role_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LoginProtocol.S2C_LoginLoad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LoginProtocol.S2C_LoginLoad)
  return false;
#undef DO_
}

void S2C_LoginLoad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LoginProtocol.S2C_LoginLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // int32 role_id = 2;
  if (this->role_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->role_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LoginProtocol.S2C_LoginLoad)
}

::google::protobuf::uint8* S2C_LoginLoad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LoginProtocol.S2C_LoginLoad)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // int32 role_id = 2;
  if (this->role_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->role_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginProtocol.S2C_LoginLoad)
  return target;
}

size_t S2C_LoginLoad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginProtocol.S2C_LoginLoad)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  // int32 role_id = 2;
  if (this->role_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->role_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2C_LoginLoad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LoginProtocol.S2C_LoginLoad)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C_LoginLoad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C_LoginLoad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LoginProtocol.S2C_LoginLoad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LoginProtocol.S2C_LoginLoad)
    MergeFrom(*source);
  }
}

void S2C_LoginLoad::MergeFrom(const S2C_LoginLoad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoginProtocol.S2C_LoginLoad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.role_id() != 0) {
    set_role_id(from.role_id());
  }
}

void S2C_LoginLoad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LoginProtocol.S2C_LoginLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C_LoginLoad::CopyFrom(const S2C_LoginLoad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginProtocol.S2C_LoginLoad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C_LoginLoad::IsInitialized() const {
  return true;
}

void S2C_LoginLoad::Swap(S2C_LoginLoad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C_LoginLoad::InternalSwap(S2C_LoginLoad* other) {
  using std::swap;
  swap(ret_, other->ret_);
  swap(role_id_, other->role_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2C_LoginLoad::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace LoginProtocol
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LoginProtocol::C2S_LoginLoad* Arena::CreateMaybeMessage< ::LoginProtocol::C2S_LoginLoad >(Arena* arena) {
  return Arena::CreateInternal< ::LoginProtocol::C2S_LoginLoad >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LoginProtocol::S2C_LoginLoad* Arena::CreateMaybeMessage< ::LoginProtocol::S2C_LoginLoad >(Arena* arena) {
  return Arena::CreateInternal< ::LoginProtocol::S2C_LoginLoad >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
